package k_Chapter10;

//! 인터페이스 
// : 객체가 어떤 방식으로 동작해야 하는지를 정의하는 추상 타입
// : 추상 메서드와 상수만으로 구성된 특수한 클래스
// - 모든 메서드가 추상 메서드인 추상 클래스와 유사
// - 객체의 기능을 정의하고, 실제 구현은 인터페이스를 구현하는 클래스에서 담당

//! 인터페이스의 필요성
// : 서로 다른 클래스에 대해 공통된 동작을 보장할 때
//   - 인터페이스를 구현하는 모든 클래스는 인터페이스의 모든 메서드를 반드시 구현
// : 여러 인터페이스를 동시에 구현 가능
//   - 한 클래스에 대해 여러 개의 인터페이스 구현 가능

//! 인터페이스 구현 방법
// interface 키워드를 사용하여 선언

//! 인터페이스 VS 추상클래스
// : 추상 메서드를 포함 (공통점)

// 인터페이스: 클래스의 동작을 정의하는 '계약'역할, 다중 상속 효과
// - 객체가 어떤 행위를 해야 하는지를 정의
// - extends 사용하여 인터페이스 간에 다중 구현
// - 추상 메서드, 상수만 포함

// 추상클래스: 관련된 클래스들의 공통적인 특징을 추출하여'일부'구현을 포함한 상태 제공
public class B_Interface {
	public static void main(String[] args) {
		
	}

}
